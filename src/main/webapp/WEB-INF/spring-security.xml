<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                   http://www.springframework.org/schema/security
                   http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http auto-config="true" use-expressions="true" path-type="regex">
        <form-login login-page="/"
                    default-target-url="/signIn/success"
                    authentication-failure-url="/?loginError=true"
                    authentication-success-handler-ref="AuthenticationSuccessHandlerImpl"
                    authentication-failure-handler-ref="formLoginFailureHandler"/>
        <logout logout-url="/signOut"
                logout-success-url="/"
                invalidate-session="true"/>
        <intercept-url pattern="/admin.*" access="hasRole('ROLE_ADMIN')"/>
        <!--<intercept-url pattern="/customer.*" access="hasRole('CUSTOMER')"/>-->
        <!--<intercept-url pattern="/order.*" access="hasRole('CUSTOMER')"/>-->
        <!--<intercept-url pattern="/auth.*" access="hasRole('CUSTOMER')"/>-->
    </http>

    <beans:bean id="daoAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
    </beans:bean>

    <beans:bean id="authenticationManager"
                class="org.springframework.security.authentication.ProviderManager">
        <beans:property name="providers">
            <beans:list>
                <beans:ref local="daoAuthenticationProvider"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="AuthenticationSuccessHandlerImpl"
                class="com.viiup.web.flock.services.AuthenticationSuccessHandlerImpl">
    </beans:bean>

    <beans:bean id="formLoginFailureHandler"
                class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
        <beans:property name="allowSessionCreation" value="true"/>
        <beans:property name="exceptionMappings">
            <beans:props>
                <beans:prop key="org.springframework.security.authentication.BadCredentialsException">/?loginError=true</beans:prop>
                <beans:prop key="org.springframework.security.authentication.CredentialsExpiredException">/tempPasswordChange?loginAttempt=true</beans:prop>
                <beans:prop key="org.springframework.security.authentication.LockedException">/?loginError=true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <!--<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">-->
        <!--<beans:constructor-arg name="strength" value="256"/>-->
    <!--</beans:bean>-->

    <!--<beans:bean id="saltSource" class="org.springframework.security.authentication.providers.ReflectionSaltSource">-->
        <!--<beans:property name="userPropertyToUse" value="salt"/>-->
    <!--</beans:bean>-->

    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <!--<password-encoder ref="passwordEncoder">-->
                <!--<salt-source ref="saltSource"/>-->
            <!--</password-encoder>-->
        </authentication-provider>
    </authentication-manager>

</beans:beans>
